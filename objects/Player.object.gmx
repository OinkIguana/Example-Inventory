<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLuke</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
//For movement
moving = 0;
//For running the animation
image_speed = 0;
imageSpeed = 0;
imageIndex = 0;
dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grid based movement with arrow keys
//Count down the timer before player can move again
if(moving) {
    moving--;
    imageSpeed = 4/8; //Run the animation
}
if(!moving) {
    //Set the hspeed/vspeed to arrow keys. Replace with ord('w'), etc. for wasd controls
    hspeed = (keyboard_check(vk_right) - keyboard_check(vk_left)) * 4;
    vspeed = (keyboard_check(vk_down) - keyboard_check(vk_up)) * 4;
    //If moving, prevent the player from changing direction
    if(hspeed != 0 || vspeed != 0) {
        moving = 32 / 4;
    } else {
        //Otherwise stop the animation
        imageSpeed = 0;
    }
}
//Use this method of running the animation to limit the frames to just one direction
imageIndex = (imageIndex + imageSpeed) % (image_number / 4); //imageIndex is the frame
if(vspeed &gt; 0) { //Dir holds the directions
    dir = 0;
} else if(vspeed &lt; 0) {
    dir = 9;
} else if(hspeed &gt; 0) {
    dir = 6;
} else if(hspeed &lt; 0) {
    dir = 3;
} else if(imageSpeed == 0) {
    //If not moving, choose the standing pose
    imageIndex = 1;
}
//Add them together for the correct animation
image_index = imageIndex + dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pick up items off the ground
if(place_meeting(x, y, _Item)) {
    with(instance_place(x, y, _Item)) {
        inv_add(object_get_name(object_index), 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
